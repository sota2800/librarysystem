# Python stubs generated by omniidl from idl/facedetection.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


#
# Start of module "Library"
#
__name__ = "Library"
_0_Library = omniORB.openModule("Library", r"idl/facedetection.idl")
_0_Library__POA = omniORB.openModule("Library__POA", r"idl/facedetection.idl")


# struct Dataset
_0_Library.Dataset = omniORB.newEmptyClass()
class Dataset (omniORB.StructBase):
    _NP_RepositoryId = "IDL:Library/Dataset:1.0"

    def __init__(self, state, recogdata, command, phase):
        self.state = state
        self.recogdata = recogdata
        self.command = command
        self.phase = phase

_0_Library.Dataset = Dataset
_0_Library._d_Dataset  = (omniORB.tcInternal.tv_struct, Dataset, Dataset._NP_RepositoryId, "Dataset", "state", (omniORB.tcInternal.tv_string,0), "recogdata", (omniORB.tcInternal.tv_wstring,0), "command", (omniORB.tcInternal.tv_string,0), "phase", (omniORB.tcInternal.tv_string,0))
_0_Library._tc_Dataset = omniORB.tcInternal.createTypeCode(_0_Library._d_Dataset)
omniORB.registerType(Dataset._NP_RepositoryId, _0_Library._d_Dataset, _0_Library._tc_Dataset)
del Dataset

# interface facedetectiondata
_0_Library._d_facedetectiondata = (omniORB.tcInternal.tv_objref, "IDL:Library/facedetectiondata:1.0", "facedetectiondata")
omniORB.typeMapping["IDL:Library/facedetectiondata:1.0"] = _0_Library._d_facedetectiondata
_0_Library.facedetectiondata = omniORB.newEmptyClass()
class facedetectiondata :
    _NP_RepositoryId = _0_Library._d_facedetectiondata[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Library.facedetectiondata = facedetectiondata
_0_Library._tc_facedetectiondata = omniORB.tcInternal.createTypeCode(_0_Library._d_facedetectiondata)
omniORB.registerType(facedetectiondata._NP_RepositoryId, _0_Library._d_facedetectiondata, _0_Library._tc_facedetectiondata)

# facedetectiondata operations and attributes
facedetectiondata._d_setresult = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:Library/Dataset:1.0"], ), None)
facedetectiondata._d_facedetection = ((omniORB.typeMapping["IDL:Library/Dataset:1.0"], ), (omniORB.typeMapping["IDL:Library/Dataset:1.0"], ), None)
facedetectiondata._d_waitefacedetection = ((omniORB.typeMapping["IDL:Library/Dataset:1.0"], ), (omniORB.typeMapping["IDL:Library/Dataset:1.0"], ), None)
facedetectiondata._d_facedetectionadditionalfunction = ((omniORB.typeMapping["IDL:Library/Dataset:1.0"], ), (omniORB.typeMapping["IDL:Library/Dataset:1.0"], ), None)

# facedetectiondata object reference
class _objref_facedetectiondata (CORBA.Object):
    _NP_RepositoryId = facedetectiondata._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def setresult(self, *args):
        return self._obj.invoke("setresult", _0_Library.facedetectiondata._d_setresult, args)

    def facedetection(self, *args):
        return self._obj.invoke("facedetection", _0_Library.facedetectiondata._d_facedetection, args)

    def waitefacedetection(self, *args):
        return self._obj.invoke("waitefacedetection", _0_Library.facedetectiondata._d_waitefacedetection, args)

    def facedetectionadditionalfunction(self, *args):
        return self._obj.invoke("facedetectionadditionalfunction", _0_Library.facedetectiondata._d_facedetectionadditionalfunction, args)

omniORB.registerObjref(facedetectiondata._NP_RepositoryId, _objref_facedetectiondata)
_0_Library._objref_facedetectiondata = _objref_facedetectiondata
del facedetectiondata, _objref_facedetectiondata

# facedetectiondata skeleton
__name__ = "Library__POA"
class facedetectiondata (PortableServer.Servant):
    _NP_RepositoryId = _0_Library.facedetectiondata._NP_RepositoryId


    _omni_op_d = {"setresult": _0_Library.facedetectiondata._d_setresult, "facedetection": _0_Library.facedetectiondata._d_facedetection, "waitefacedetection": _0_Library.facedetectiondata._d_waitefacedetection, "facedetectionadditionalfunction": _0_Library.facedetectiondata._d_facedetectionadditionalfunction}

facedetectiondata._omni_skeleton = facedetectiondata
_0_Library__POA.facedetectiondata = facedetectiondata
omniORB.registerSkeleton(facedetectiondata._NP_RepositoryId, facedetectiondata)
del facedetectiondata
__name__ = "Library"

#
# End of module "Library"
#
__name__ = "facedetection_idl"

_exported_modules = ( "Library", )

# The end.
